<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boke.boke.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="boke.boke.entity.Comment" >
    <id column="Comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="Message_name" property="messageName" jdbcType="VARCHAR" />
    <result column="Message_email" property="messageEmail" jdbcType="VARCHAR" />
    <result column="Direct_site" property="directSite" jdbcType="VARCHAR" />
    <result column="Comment_Date" property="commentDate" jdbcType="DATE" />
    <result column="Voice_message" property="voiceMessage" jdbcType="VARCHAR" />
    <result column="BlogsArticle_Id" property="blogsarticleId" jdbcType="INTEGER" />
    <result column="Message_reply" property="messageReply" jdbcType="INTEGER" />
    <result column="Message_reply_name" property="messageReplyName" jdbcType="VARCHAR" />
    <result column="Comment_audit" property="commentAudit" jdbcType="INTEGER" />
    <result column="Head_portrait" property="headPortrait" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Comment_id, Message_name, Message_email, Direct_site, Comment_Date, Voice_message, 
    BlogsArticle_Id, Message_reply,Message_reply_name,Comment_audit,Head_portrait
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="boke.boke.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where Comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where Comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="boke.boke.entity.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="boke.boke.entity.Comment" >
    insert into comment (Comment_id, Message_name, Message_email, 
      Direct_site, Comment_Date, Voice_message, 
      BlogsArticle_Id, Message_reply,Message_reply_name,Comment_audit,Head_portrait)
    values (#{commentId,jdbcType=INTEGER}, #{messageName,jdbcType=VARCHAR}, #{messageEmail,jdbcType=VARCHAR}, 
      #{directSite,jdbcType=VARCHAR}, #{commentDate,jdbcType=DATE}, #{voiceMessage,jdbcType=VARCHAR}, 
      #{blogsarticleId,jdbcType=INTEGER}, #{messageReply,jdbcType=INTEGER},#{messageReplyName,jdbcType=VARCHAR},
      #{commentAudit,jdbcType=INTEGER}, #{headPortrait,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="boke.boke.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        Comment_id,
      </if>
      <if test="messageName != null" >
        Message_name,
      </if>
      <if test="messageEmail != null" >
        Message_email,
      </if>
      <if test="directSite != null" >
        Direct_site,
      </if>
      <if test="commentDate != null" >
        Comment_Date,
      </if>
      <if test="voiceMessage != null" >
        Voice_message,
      </if>
      <if test="blogsarticleId != null" >
        BlogsArticle_Id,
      </if>
      <if test="messageReply != null" >
        Message_reply,
      </if>
      <if test="messageReplyName != null" >
        Message_reply_name,
      </if>
      <if test="commentAudit != null" >
        Comment_audit,
      </if>
      <if test="headPortrait != null" >
        Head_portrait,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="messageName != null" >
        #{messageName,jdbcType=VARCHAR},
      </if>
      <if test="messageEmail != null" >
        #{messageEmail,jdbcType=VARCHAR},
      </if>
      <if test="directSite != null" >
        #{directSite,jdbcType=VARCHAR},
      </if>
      <if test="commentDate != null" >
        #{commentDate,jdbcType=DATE},
      </if>
      <if test="voiceMessage != null" >
        #{voiceMessage,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleId != null" >
        #{blogsarticleId,jdbcType=INTEGER},
      </if>
      <if test="messageReply != null" >
        #{messageReply,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="boke.boke.entity.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.commentId != null" >
        Comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.messageName != null" >
        Message_name = #{record.messageName,jdbcType=VARCHAR},
      </if>
      <if test="record.messageEmail != null" >
        Message_email = #{record.messageEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.directSite != null" >
        Direct_site = #{record.directSite,jdbcType=VARCHAR},
      </if>
      <if test="record.commentDate != null" >
        Comment_Date = #{record.commentDate,jdbcType=DATE},
      </if>
      <if test="record.voiceMessage != null" >
        Voice_message = #{record.voiceMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.blogsarticleId != null" >
        BlogsArticle_Id = #{record.blogsarticleId,jdbcType=INTEGER},
      </if>
      <if test="record.messageReply != null" >
        Message_reply = #{record.messageReply,jdbcType=INTEGER},
      </if>
      <if test="messageReplyName != null" >
        Message_reply_name = #{messageReplyName,jdbcType=VARCHAR},
      </if>
      <if test="commentAudit != null" >
        Comment_audit = #{commentAudit,jdbcType=INTEGER},
      </if>
      <if test="headPortrait != null" >
        Head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set Comment_id = #{record.commentId,jdbcType=INTEGER},
      Message_name = #{record.messageName,jdbcType=VARCHAR},
      Message_email = #{record.messageEmail,jdbcType=VARCHAR},
      Direct_site = #{record.directSite,jdbcType=VARCHAR},
      Comment_Date = #{record.commentDate,jdbcType=DATE},
      Voice_message = #{record.voiceMessage,jdbcType=VARCHAR},
      BlogsArticle_Id = #{record.blogsarticleId,jdbcType=INTEGER},
      Message_reply = #{record.messageReply,jdbcType=INTEGER},
      Message_reply_name = #{messageReplyName,jdbcType=VARCHAR},
      Comment_audit = #{commentAudit,jdbcType=INTEGER},
      Head_portrait = #{headPortrait,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="boke.boke.entity.Comment" >
    update comment
    <set >
      <if test="messageName != null" >
        Message_name = #{messageName,jdbcType=VARCHAR},
      </if>
      <if test="messageEmail != null" >
        Message_email = #{messageEmail,jdbcType=VARCHAR},
      </if>
      <if test="directSite != null" >
        Direct_site = #{directSite,jdbcType=VARCHAR},
      </if>
      <if test="commentDate != null" >
        Comment_Date = #{commentDate,jdbcType=DATE},
      </if>
      <if test="voiceMessage != null" >
        Voice_message = #{voiceMessage,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleId != null" >
        BlogsArticle_Id = #{blogsarticleId,jdbcType=INTEGER},
      </if>
      <if test="messageReply != null" >
        Message_reply = #{messageReply,jdbcType=INTEGER},
      </if>
      <if test="messageReplyName != null" >
        Message_reply_name = #{messageReplyName,jdbcType=VARCHAR},
      </if>
      <if test="commentAudit != null" >
        Comment_audit = #{commentAudit,jdbcType=INTEGER},
      </if>
      <if test="headPortrait != null" >
        Head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
    </set>
    where Comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="boke.boke.entity.Comment" >
    update comment
    set Message_name = #{messageName,jdbcType=VARCHAR},
      Message_email = #{messageEmail,jdbcType=VARCHAR},
      Direct_site = #{directSite,jdbcType=VARCHAR},
      Comment_Date = #{commentDate,jdbcType=DATE},
      Voice_message = #{voiceMessage,jdbcType=VARCHAR},
      BlogsArticle_Id = #{blogsarticleId,jdbcType=INTEGER},
      Message_reply = #{messageReply,jdbcType=INTEGER},
      Message_reply_name = #{messageReplyName,jdbcType=VARCHAR},
      Comment_audit = #{commentAudit,jdbcType=INTEGER},
      Head_portrait = #{headPortrait,jdbcType=VARCHAR}
    where Comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <select id="selectCommentblogExample" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from comment
    where BlogsArticle_Id = #{blogId,jdbcType=INTEGER} and Message_reply =0
  </select>
  <select id="selectBlogMessageExample" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from comment
    where  BlogsArticle_Id=-1 and Message_reply =0 and Comment_audit = 1
  </select>
  <select id="selectCommentparentExample" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from comment
    where Message_reply = #{ReplyId,jdbcType=INTEGER}
  </select>
  <select id="selectMessageparentExample" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select *
    from comment
    where Message_reply = #{ReplyId,jdbcType=INTEGER} and Comment_audit = 1
  </select>
  <update id="updateByAuditComment" parameterType="map" >
    update comment
    set Comment_audit=1
    where Comment_id = #{commentid,jdbcType=INTEGER}
  </update>
  <delete id="DelteCommentmessageslave" parameterType="java.lang.Integer" >
    delete from comment
    where Comment_id in (SELECT Comment_id FROM (
                                                         SELECT t1.Comment_id,
                                                                IF(FIND_IN_SET(`Message_reply`, @pids) > 0, @pids := CONCAT(@pids, ',', Comment_id), 0) AS ischild
                                                         FROM (
                                                                SELECT Comment_id,`Message_reply` FROM `comment` t ORDER BY `Message_reply`, Comment_id
                                                              ) t1,
                                                              (SELECT @pids := #{commentid,jdbcType=INTEGER}) t2
                                                       ) t3 WHERE ischild != 0)
  </delete>
  <select id="selCommentmessageslave" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    SELECT count(Comment_id) FROM (
                             SELECT t1.Comment_id,
                                    IF(FIND_IN_SET(`Message_reply`, @pids) > 0, @pids := CONCAT(@pids, ',', Comment_id), 0) AS ischild
                             FROM (
                                    SELECT Comment_id,`Message_reply` FROM `comment` t ORDER BY `Message_reply`, Comment_id
                                  ) t1,
                                  (SELECT @pids := #{commentid,jdbcType=INTEGER}) t2
                           ) t3 WHERE ischild != 0
  </select>
</mapper>