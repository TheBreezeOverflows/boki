<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boke.boke.mapper.BlogsarticleMapper" >
  <resultMap id="BaseResultMap" type="boke.boke.entity.Blogsarticle" >
    <id column="BlogsArticle_Id" property="blogsarticleId" jdbcType="INTEGER" />
    <result column="BlogsArticle_User_id" property="blogsarticleUserId" jdbcType="INTEGER" />
    <result column="BlogsArticle_Headline" property="blogsarticleHeadline" jdbcType="VARCHAR" />
    <result column="BlogsArticle_Date" property="blogsarticleDate" jdbcType="DATE" />
    <result column="BlogsArticle_image" property="blogsarticleImage" jdbcType="VARCHAR" />
    <result column="BlogsArticle_Content" property="blogsarticleContent" jdbcType="VARCHAR" />
    <result column="BlogsArticle_Information" property="blogsarticleInformation" jdbcType="VARCHAR" />
    <result column="BlogsArticle_DetailedInformation" property="blogsarticleDetailedinformation" jdbcType="VARCHAR" />
    <result column="AccessNumber" property="accessnumber" jdbcType="INTEGER" />
    <result column="CommentNumber" property="commentnumber" jdbcType="INTEGER" />
    <result column="User_Name" property="bloagUserNames" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BlogsArticle_Id, BlogsArticle_User_id, BlogsArticle_Headline, BlogsArticle_Date, 
    BlogsArticle_image, BlogsArticle_Content, BlogsArticle_Information, BlogsArticle_DetailedInformation, 
    AccessNumber, CommentNumber
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="boke.boke.entity.BlogsarticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blogsarticle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blogsarticle
    where BlogsArticle_Id = #{blogsarticleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blogsarticle
    where BlogsArticle_Id = #{blogsarticleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="boke.boke.entity.BlogsarticleExample" >
    delete from blogsarticle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="boke.boke.entity.Blogsarticle" >
    insert into blogsarticle (BlogsArticle_Id, BlogsArticle_User_id, 
      BlogsArticle_Headline, BlogsArticle_Date, BlogsArticle_image, 
      BlogsArticle_Content, BlogsArticle_Information, 
      BlogsArticle_DetailedInformation, AccessNumber, 
      CommentNumber,BloagUserNames)
    values (#{blogsarticleId,jdbcType=INTEGER}, #{blogsarticleUserId,jdbcType=INTEGER}, 
      #{blogsarticleHeadline,jdbcType=VARCHAR}, #{blogsarticleDate,jdbcType=DATE}, #{blogsarticleImage,jdbcType=VARCHAR}, 
      #{blogsarticleContent,jdbcType=VARCHAR}, #{blogsarticleInformation,jdbcType=VARCHAR}, 
      #{blogsarticleDetailedinformation,jdbcType=VARCHAR}, #{accessnumber,jdbcType=INTEGER}, 
      #{commentnumber,jdbcType=INTEGER},#{bloagUserNames,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="boke.boke.entity.Blogsarticle" >
    insert into blogsarticle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogsarticleId != null" >
        BlogsArticle_Id,
      </if>
      <if test="blogsarticleUserId != null" >
        BlogsArticle_User_id,
      </if>
      <if test="blogsarticleHeadline != null" >
        BlogsArticle_Headline,
      </if>
      <if test="blogsarticleDate != null" >
        BlogsArticle_Date,
      </if>
      <if test="blogsarticleImage != null" >
        BlogsArticle_image,
      </if>
      <if test="blogsarticleContent != null" >
        BlogsArticle_Content,
      </if>
      <if test="blogsarticleInformation != null" >
        BlogsArticle_Information,
      </if>
      <if test="blogsarticleDetailedinformation != null" >
        BlogsArticle_DetailedInformation,
      </if>
      <if test="accessnumber != null" >
        AccessNumber,
      </if>
      <if test="commentnumber != null" >
        CommentNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogsarticleId != null" >
        #{blogsarticleId,jdbcType=INTEGER},
      </if>
      <if test="blogsarticleUserId != null" >
        #{blogsarticleUserId,jdbcType=INTEGER},
      </if>
      <if test="blogsarticleHeadline != null" >
        #{blogsarticleHeadline,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleDate != null" >
        #{blogsarticleDate,jdbcType=DATE},
      </if>
      <if test="blogsarticleImage != null" >
        #{blogsarticleImage,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleContent != null" >
        #{blogsarticleContent,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleInformation != null" >
        #{blogsarticleInformation,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleDetailedinformation != null" >
        #{blogsarticleDetailedinformation,jdbcType=VARCHAR},
      </if>
      <if test="accessnumber != null" >
        #{accessnumber,jdbcType=INTEGER},
      </if>
      <if test="commentnumber != null" >
        #{commentnumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="boke.boke.entity.BlogsarticleExample" resultType="java.lang.Integer" >
    select count(*) from blogsarticle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blogsarticle
    <set >
      <if test="record.blogsarticleId != null" >
        BlogsArticle_Id = #{record.blogsarticleId,jdbcType=INTEGER},
      </if>
      <if test="record.blogsarticleUserId != null" >
        BlogsArticle_User_id = #{record.blogsarticleUserId,jdbcType=INTEGER},
      </if>
      <if test="record.blogsarticleHeadline != null" >
        BlogsArticle_Headline = #{record.blogsarticleHeadline,jdbcType=VARCHAR},
      </if>
      <if test="record.blogsarticleDate != null" >
        BlogsArticle_Date = #{record.blogsarticleDate,jdbcType=DATE},
      </if>
      <if test="record.blogsarticleImage != null" >
        BlogsArticle_image = #{record.blogsarticleImage,jdbcType=VARCHAR},
      </if>
      <if test="record.blogsarticleContent != null" >
        BlogsArticle_Content = #{record.blogsarticleContent,jdbcType=VARCHAR},
      </if>
      <if test="record.blogsarticleInformation != null" >
        BlogsArticle_Information = #{record.blogsarticleInformation,jdbcType=VARCHAR},
      </if>
      <if test="record.blogsarticleDetailedinformation != null" >
        BlogsArticle_DetailedInformation = #{record.blogsarticleDetailedinformation,jdbcType=VARCHAR},
      </if>
      <if test="record.accessnumber != null" >
        AccessNumber = #{record.accessnumber,jdbcType=INTEGER},
      </if>
      <if test="record.commentnumber != null" >
        CommentNumber = #{record.commentnumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blogsarticle
    set BlogsArticle_Id = #{record.blogsarticleId,jdbcType=INTEGER},
      BlogsArticle_User_id = #{record.blogsarticleUserId,jdbcType=INTEGER},
      BlogsArticle_Headline = #{record.blogsarticleHeadline,jdbcType=VARCHAR},
      BlogsArticle_Date = #{record.blogsarticleDate,jdbcType=DATE},
      BlogsArticle_image = #{record.blogsarticleImage,jdbcType=VARCHAR},
      BlogsArticle_Content = #{record.blogsarticleContent,jdbcType=VARCHAR},
      BlogsArticle_Information = #{record.blogsarticleInformation,jdbcType=VARCHAR},
      BlogsArticle_DetailedInformation = #{record.blogsarticleDetailedinformation,jdbcType=VARCHAR},
      AccessNumber = #{record.accessnumber,jdbcType=INTEGER},
      CommentNumber = #{record.commentnumber,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="boke.boke.entity.Blogsarticle" >
    update blogsarticle
    <set >
      <if test="blogsarticleUserId != null" >
        BlogsArticle_User_id = #{blogsarticleUserId,jdbcType=INTEGER},
      </if>
      <if test="blogsarticleHeadline != null" >
        BlogsArticle_Headline = #{blogsarticleHeadline,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleDate != null" >
        BlogsArticle_Date = #{blogsarticleDate,jdbcType=DATE},
      </if>
      <if test="blogsarticleImage != null" >
        BlogsArticle_image = #{blogsarticleImage,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleContent != null" >
        BlogsArticle_Content = #{blogsarticleContent,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleInformation != null" >
        BlogsArticle_Information = #{blogsarticleInformation,jdbcType=VARCHAR},
      </if>
      <if test="blogsarticleDetailedinformation != null" >
        BlogsArticle_DetailedInformation = #{blogsarticleDetailedinformation,jdbcType=VARCHAR},
      </if>
      <if test="accessnumber != null" >
        AccessNumber = #{accessnumber,jdbcType=INTEGER},
      </if>
      <if test="commentnumber != null" >
        CommentNumber = #{commentnumber,jdbcType=INTEGER},
      </if>
    </set>
    where BlogsArticle_Id = #{blogsarticleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="boke.boke.entity.Blogsarticle" >
    update blogsarticle
    set BlogsArticle_User_id = #{blogsarticleUserId,jdbcType=INTEGER},
      BlogsArticle_Headline = #{blogsarticleHeadline,jdbcType=VARCHAR},
      BlogsArticle_Date = #{blogsarticleDate,jdbcType=DATE},
      BlogsArticle_image = #{blogsarticleImage,jdbcType=VARCHAR},
      BlogsArticle_Content = #{blogsarticleContent,jdbcType=VARCHAR},
      BlogsArticle_Information = #{blogsarticleInformation,jdbcType=VARCHAR},
      BlogsArticle_DetailedInformation = #{blogsarticleDetailedinformation,jdbcType=VARCHAR},
      AccessNumber = #{accessnumber,jdbcType=INTEGER},
      CommentNumber = #{commentnumber,jdbcType=INTEGER}
    where BlogsArticle_Id = #{blogsarticleId,jdbcType=INTEGER}
  </update>


  <select id="selectByExampleusername" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
      BlogsArticle_Id, BlogsArticle_User_id, BlogsArticle_Headline, BlogsArticle_Date,
      BlogsArticle_image, BlogsArticle_Content, BlogsArticle_Information, BlogsArticle_DetailedInformation,
      AccessNumber, CommentNumber,
      User_Name
    from user uses
    inner join blogsarticle blog
    on blog.BlogsArticle_User_id = uses.User_Id
  </select>

  <select id="selectByClassifExample" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
      BlogsArticle_Id, BlogsArticle_User_id, BlogsArticle_Headline, BlogsArticle_Date,
      BlogsArticle_image, BlogsArticle_Content, BlogsArticle_Information, BlogsArticle_DetailedInformation,
      AccessNumber, CommentNumber
    from blogsarticle
    WHERE BlogsArticle_Id
    in (SELECT BlogsArticle_Id from blogandclassify WHERE Classify_id= #{blogsarticleId,jdbcType=INTEGER})
  </select>
  <select id="selectByNameifExample" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    BlogsArticle_Id, BlogsArticle_User_id, BlogsArticle_Headline, BlogsArticle_Date,
    BlogsArticle_image, BlogsArticle_Content, BlogsArticle_Information, BlogsArticle_DetailedInformation,
    AccessNumber, CommentNumber,
    User_Name
    from user uses
    inner join blogsarticle blog
    on blog.BlogsArticle_User_id = uses.User_Id
    WHERE
    1=1
    <if test="name != null" >
     and blog.BlogsArticle_Headline like concat( '%' , '${name}', '%')
    </if>
  </select>
  <insert id="insertstr" parameterType="boke.boke.entity.Blogsarticle"  useGeneratedKeys="true" keyProperty="blogsarticleId">
    insert into blogsarticle (BlogsArticle_Id, BlogsArticle_User_id,
                              BlogsArticle_Headline, BlogsArticle_Date, BlogsArticle_image,
                              BlogsArticle_Content, BlogsArticle_Information,
                              BlogsArticle_DetailedInformation, AccessNumber,
                              CommentNumber,BloagUserNames)
    values (#{blogsarticleId,jdbcType=INTEGER}, #{blogsarticleUserId,jdbcType=INTEGER},
            #{blogsarticleHeadline,jdbcType=VARCHAR}, #{blogsarticleDate,jdbcType=DATE}, #{blogsarticleImage,jdbcType=VARCHAR},
            #{blogsarticleContent,jdbcType=VARCHAR}, #{blogsarticleInformation,jdbcType=VARCHAR},
            #{blogsarticleDetailedinformation,jdbcType=VARCHAR}, #{accessnumber,jdbcType=INTEGER},
            #{commentnumber,jdbcType=INTEGER},#{bloagUserNames,jdbcType=VARCHAR})
  </insert>

  <select id="selectByblogclasscontent" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select *
    from blogsarticle blog,
         user users
    where blog.BlogsArticle_User_id = users.User_Id
      and blog.BlogsArticle_Id = #{blogid,jdbcType=INTEGER}
  </select>
  <update id="AddBlogAccessnumber" parameterType="map" >
    update blogsarticle
    set AccessNumber=AccessNumber+1
    where BlogsArticle_Id = #{blogid,jdbcType=INTEGER}
  </update>
  <update id="AddBlogcommentnumber" parameterType="map" >
    update blogsarticle
    set CommentNumber=CommentNumber+1
    where BlogsArticle_Id = #{blogid,jdbcType=INTEGER}
  </update>
</mapper>