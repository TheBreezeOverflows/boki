<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boke.boke.mapper.LinkMapper" >
  <resultMap id="BaseResultMap" type="boke.boke.entity.Link" >
    <id column="link_id" property="linkId" jdbcType="INTEGER" />
    <result column="link_name" property="linkName" jdbcType="VARCHAR" />
    <result column="link_image" property="linkImage" jdbcType="VARCHAR" />
    <result column="link_url" property="linkUrl" jdbcType="VARCHAR" />
    <result column="link_type" property="linkType" jdbcType="INTEGER" />
    <result column="User_Name" property="username" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    link_id, link_name, link_image, link_url, link_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="boke.boke.entity.LinkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from link
    where link_id = #{linkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from link
    where link_id = #{linkId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="boke.boke.entity.LinkExample" >
    delete from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="boke.boke.entity.Link" >
    insert into link (link_id, link_name, link_image, 
      link_url, link_type)
    values (#{linkId,jdbcType=INTEGER}, #{linkName,jdbcType=VARCHAR}, #{linkImage,jdbcType=VARCHAR}, 
      #{linkUrl,jdbcType=VARCHAR}, #{linkType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="boke.boke.entity.Link" >
    insert into link
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="linkId != null" >
        link_id,
      </if>
      <if test="linkName != null" >
        link_name,
      </if>
      <if test="linkImage != null" >
        link_image,
      </if>
      <if test="linkUrl != null" >
        link_url,
      </if>
      <if test="linkType != null" >
        link_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="linkId != null" >
        #{linkId,jdbcType=INTEGER},
      </if>
      <if test="linkName != null" >
        #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkImage != null" >
        #{linkImage,jdbcType=VARCHAR},
      </if>
      <if test="linkUrl != null" >
        #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="linkType != null" >
        #{linkType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="boke.boke.entity.LinkExample" resultType="java.lang.Integer" >
    select count(*) from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update link
    <set >
      <if test="record.linkId != null" >
        link_id = #{record.linkId,jdbcType=INTEGER},
      </if>
      <if test="record.linkName != null" >
        link_name = #{record.linkName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkImage != null" >
        link_image = #{record.linkImage,jdbcType=VARCHAR},
      </if>
      <if test="record.linkUrl != null" >
        link_url = #{record.linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.linkType != null" >
        link_type = #{record.linkType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update link
    set link_id = #{record.linkId,jdbcType=INTEGER},
      link_name = #{record.linkName,jdbcType=VARCHAR},
      link_image = #{record.linkImage,jdbcType=VARCHAR},
      link_url = #{record.linkUrl,jdbcType=VARCHAR},
      link_type = #{record.linkType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="boke.boke.entity.Link" >
    update link
    <set >
      <if test="linkName != null" >
        link_name = #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkImage != null" >
        link_image = #{linkImage,jdbcType=VARCHAR},
      </if>
      <if test="linkUrl != null" >
        link_url = #{linkUrl,jdbcType=VARCHAR},
      </if>
      <if test="linkType != null" >
        link_type = #{linkType,jdbcType=INTEGER},
      </if>
    </set>
    where link_id = #{linkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="boke.boke.entity.Link" >
    update link
    set link_name = #{linkName,jdbcType=VARCHAR},
      link_image = #{linkImage,jdbcType=VARCHAR},
      link_url = #{linkUrl,jdbcType=VARCHAR},
      link_type = #{linkType,jdbcType=INTEGER}
    where link_id = #{linkId,jdbcType=INTEGER}
  </update>
  <select id="selectByUserType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
      *
    FROM
      link
    WHERE
      link_type = #{usertype,jdbcType=INTEGER}
  </select>
  <select id="AllLinkdmessage" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
      link_id,link_name,link_image,link_url,link_type,u.User_Name
    FROM
      link lk,user u
    WHERE u.user_Id=link_type
    ORDER BY link_type
  </select>
  <select id="commentNameifyIdInfo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
      link_id,link_name,link_image,link_url,link_type,u.User_Name
    FROM
      link lk,user u
    WHERE u.user_Id=link_type and link_name like concat( '%' , '${name}', '%')
    ORDER BY link_type
  </select>
</mapper>